{"ast":null,"code":"var _jsxFileName = \"/Users/a.statistic/GitRepos/weather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Search from './components/search/search';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport { WEATHER_API_URL, WEATHER_API_KEY } from './api';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForcast] = useState(null);\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\n    const forcastFetch = fetch(`${WEATHER_API_URL}/forcast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\n    Promise.all([currentWeatherFetch, forcastFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forcastResponse = await response[1].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForcast({\n        city: searchData.label,\n        ...forcastResponse\n      });\n    }).catch(err => console.log(err));\n  };\n  console.log(currentWeather);\n  console.log(forecast);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearchChange: handleOnSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      data: currentWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DU4qt4jSHjjWYBV5yzze/DlIB6g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","CurrentWeather","WEATHER_API_URL","WEATHER_API_KEY","useState","App","currentWeather","setCurrentWeather","forecast","setForcast","handleOnSearchChange","searchData","lat","lon","value","split","currentWeatherFetch","fetch","forcastFetch","Promise","all","then","response","weatherResponse","json","forcastResponse","city","label","catch","err","console","log"],"sources":["/Users/a.statistic/GitRepos/weather-app/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Search from './components/search/search';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport { WEATHER_API_URL, WEATHER_API_KEY } from './api';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForcast] = useState(null);\n\n\n  const handleOnSearchChange = (searchData) => {\n    const [lat, lon] = searchData.value.split(\" \");\n\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`)\n    const forcastFetch = fetch(`${WEATHER_API_URL}/forcast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`)\n\n    Promise.all([currentWeatherFetch, forcastFetch])\n    .then(async (response) => {\n      const weatherResponse = await response[0].json()\n      const forcastResponse = await response[1].json()\n\n      setCurrentWeather({city: searchData.label, ...weatherResponse});\n      setForcast({city: searchData.label, ...forcastResponse});\n    })\n    .catch((err) => console.log(err));\n  }\n\n  console.log(currentWeather);\n  console.log(forecast);\n  return (\n    <div className=\"container\">\n      <Search onSearchChange={handleOnSearchChange}/>\n      {currentWeather && <CurrentWeather data={currentWeather}/>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,cAAc,MAAM,8CAA8C;AACzE,SAASC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACxD,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,SAASC,GAAG,GAAG;EAAA;EAEb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGH,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACI,QAAQ,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAG7C,MAAMM,oBAAoB,GAAIC,UAAU,IAAK;IAC3C,MAAM,CAACC,GAAG,EAAEC,GAAG,CAAC,GAAGF,UAAU,CAACG,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IAE9C,MAAMC,mBAAmB,GAAGC,KAAK,CAAE,GAAEf,eAAgB,gBAAeU,GAAI,QAAOC,GAAI,UAASV,eAAgB,EAAC,CAAC;IAC9G,MAAMe,YAAY,GAAGD,KAAK,CAAE,GAAEf,eAAgB,gBAAeU,GAAI,QAAOC,GAAI,UAASV,eAAgB,EAAC,CAAC;IAEvGgB,OAAO,CAACC,GAAG,CAAC,CAACJ,mBAAmB,EAAEE,YAAY,CAAC,CAAC,CAC/CG,IAAI,CAAC,MAAOC,QAAQ,IAAK;MACxB,MAAMC,eAAe,GAAG,MAAMD,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;MAChD,MAAMC,eAAe,GAAG,MAAMH,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;MAEhDjB,iBAAiB,CAAC;QAACmB,IAAI,EAAEf,UAAU,CAACgB,KAAK;QAAE,GAAGJ;MAAe,CAAC,CAAC;MAC/Dd,UAAU,CAAC;QAACiB,IAAI,EAAEf,UAAU,CAACgB,KAAK;QAAE,GAAGF;MAAe,CAAC,CAAC;IAC1D,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACnC,CAAC;EAEDC,OAAO,CAACC,GAAG,CAACzB,cAAc,CAAC;EAC3BwB,OAAO,CAACC,GAAG,CAACvB,QAAQ,CAAC;EACrB,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB,QAAC,MAAM;MAAC,cAAc,EAAEE;IAAqB;MAAA;MAAA;MAAA;IAAA,QAAE,EAC9CJ,cAAc,iBAAI,QAAC,cAAc;MAAC,IAAI,EAAEA;IAAe;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACtD;AAEV;AAAC,GA/BQD,GAAG;AAAA,KAAHA,GAAG;AAiCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}