{"ast":null,"code":"var _jsxFileName = \"/Users/a.statistic/GitRepos/weather-app/src/components/search/search.js\",\n  _s = $RefreshSig$();\nimport { AsyncPaginate } from \"react-select-async-paginate\";\nimport { useState } from \"react\";\nimport { GEO_API_URL, geoApiOptions } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = _ref => {\n  _s();\n  let {\n    onSearchChange\n  } = _ref;\n  const [search, setSearch] = useState(null);\n  const loadOptions = inputValue => {\n    return fetch(`${GEO_API_URL}/cities?minPopulation=5000&namePrefix=${inputValue}`, geoApiOptions).then(response => response.json()).then(response => {\n      return {\n        options: response.data.map(city => {\n          return {\n            value: `${city.latitude} ${city.longitude}`,\n            label: `${city.name}, ${city.countryCode}`\n          };\n        })\n      };\n    }).catch(err => console.error(err));\n  };\n  const handleOnChange = searchData => {\n    setSearch(searchData);\n    onSearchChange(searchData);\n  };\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"Search for city\",\n    debounceTimeout: 600,\n    value: search,\n    onChange: handleOnChange,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"rZ+0pF47En10nDqJpRK7x4d9dB0=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["AsyncPaginate","useState","GEO_API_URL","geoApiOptions","Search","onSearchChange","search","setSearch","loadOptions","inputValue","fetch","then","response","json","options","data","map","city","value","latitude","longitude","label","name","countryCode","catch","err","console","error","handleOnChange","searchData"],"sources":["/Users/a.statistic/GitRepos/weather-app/src/components/search/search.js"],"sourcesContent":["import { AsyncPaginate } from \"react-select-async-paginate\";\nimport { useState } from \"react\";\nimport { GEO_API_URL, geoApiOptions } from \"../../api\";\n\nconst Search = ({ onSearchChange }) => {\n    const [search, setSearch] = useState(null)\n\n    const loadOptions = (inputValue) => {\n        return fetch(`${GEO_API_URL}/cities?minPopulation=5000&namePrefix=${inputValue}`, geoApiOptions)\n            .then(response => response.json())\n            .then(response => {\n                return {\n                    options: response.data.map((city) => {\n                        return {\n                            value: `${city.latitude} ${city.longitude}`,\n                            label: `${city.name}, ${city.countryCode}`,\n                        };\n                    }),\n                };\n            })\n            .catch(err => console.error(err));\n    }\n\n    const handleOnChange = (searchData) => {\n        setSearch(searchData);\n        onSearchChange(searchData);\n    }\n    return (\n        <AsyncPaginate\n            placeholder=\"Search for city\"\n            debounceTimeout={600}\n            value={search}\n            onChange={handleOnChange}\n            loadOptions={loadOptions}\n\n        />\n    )\n}\n\nexport default Search;"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,aAAa,QAAQ,WAAW;AAAC;AAEvD,MAAMC,MAAM,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMO,WAAW,GAAIC,UAAU,IAAK;IAChC,OAAOC,KAAK,CAAE,GAAER,WAAY,yCAAwCO,UAAW,EAAC,EAAEN,aAAa,CAAC,CAC3FQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACC,QAAQ,IAAI;MACd,OAAO;QACHE,OAAO,EAAEF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAAEC,IAAI,IAAK;UACjC,OAAO;YACHC,KAAK,EAAG,GAAED,IAAI,CAACE,QAAS,IAAGF,IAAI,CAACG,SAAU,EAAC;YAC3CC,KAAK,EAAG,GAAEJ,IAAI,CAACK,IAAK,KAAIL,IAAI,CAACM,WAAY;UAC7C,CAAC;QACL,CAAC;MACL,CAAC;IACL,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACzC,CAAC;EAED,MAAMG,cAAc,GAAIC,UAAU,IAAK;IACnCtB,SAAS,CAACsB,UAAU,CAAC;IACrBxB,cAAc,CAACwB,UAAU,CAAC;EAC9B,CAAC;EACD,oBACI,QAAC,aAAa;IACV,WAAW,EAAC,iBAAiB;IAC7B,eAAe,EAAE,GAAI;IACrB,KAAK,EAAEvB,MAAO;IACd,QAAQ,EAAEsB,cAAe;IACzB,WAAW,EAAEpB;EAAY;IAAA;IAAA;IAAA;EAAA,QAE3B;AAEV,CAAC;AAAA,GAjCKJ,MAAM;AAAA,KAANA,MAAM;AAmCZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}